/*---
import { getCollection } from 'astro:content';
export async function getStaticPaths({ paginate }) {
    const pages = await getCollection('games');
    
    /*
    , ({ data }) => {
        return data.draft !== true;
    }
     */
    
    console.log("pages:\n\t" + pages)
    
    pages.push({
        slug: undefined,
        params: {
            title: "All Games",
            text: "here you go"
        }
    });
    
    console.log(paginate(pages, { pageSize: 2 }));
    // Generate pages from our array of astronauts, with 2 to a page for testing
    //[{params: undefined, props: {title:"all games", text:"here you go"}}].concat(

    var hi = pages.map((page) => {
        console.log(page.props);
        console.log(page.params)
        return {
            params: { title: page },
            props: page.props,
        };
    });
    
    console.log(hi);
    return paginate(pages, { pageSize: 2 });

   /* return pages.map(({ slug, title, text }) => {
        return {
            params: { slug },
            props: { title, text },
        };
    });*/
}

// All paginated data is passed on the "page" prop
const { page } = Astro.props;
const { prev, next} = page.url; 
---

<h1>Blog Posts</h1>
<ul>
    {page.data.map(({ data }) => <li>{data.title}</li>)}
</ul>
<p>Posts {page.start + 1} to {page.end + 1}</p>
<p>{page.size} posts per page</p>
<p>Page {page.currentPage} of {page.lastPage}</p>
<p><a href={next}>Next Page</a></p>
<p><a href={prev}>Previous Page</a></p>*/