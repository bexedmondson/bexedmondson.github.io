---
const entries = Astro.locals.starlightBlog.posts
const entryTags = new Map()

for (const entry of entries) {
    for (const tag of entry.tags) {
        const infos = entryTags.get(tag.href) ?? { entries: 0, label: tag.label }
    
        infos.entries++;
    
        entryTags.set(tag.href, infos)
    }
}

interface TagDetail {
    path : string;
    label : string;
    count : number;
}

const allTags : Array<TagDetail> = []

if (entryTags.size > 0) {
    entryTags.entries().forEach((entry) => {
        allTags.push({
            path: entry[0],
            label: entry[1].label,
            count: entry[1].entries
        })
    })

    allTags.sort((a, b) => a.label.localeCompare(b.label))
}

const allTagsCountSort = allTags.toSorted((a, b) => b.count - a.count)

---

sort by: <astro-toggle data-entries={allTags}><a id="countLink">count</a><b id="countBold" style="display: none">count</b>  <a id="alphaLink" style="display: none">name</a><b id="alphaBold">name</b></astro-toggle>

<ul id="countSorted" style="display: none">
    {
        allTagsCountSort.map((entry) => { 
            return (<li><a href={entry.path}>{entry.label} ({entry.count})</a></li>)
        })
    }
</ul>

<ul id="alphaSorted">
    {
        allTags.map((entry) => {
            return (<li><a href={entry.path}>{entry.label} ({entry.count})</a></li>)
        })
    }
</ul>

<script>
    let toggleCount = false;
    class Toggle extends HTMLElement {
        connectedCallback() {
            const countLink = document.getElementById("countLink");
            const alphaLink = document.getElementById("alphaLink");
            const countBold = document.getElementById("countBold");
            const alphaBold = document.getElementById("alphaBold");
            const countList = document.getElementById("countSorted");
            const alphaList = document.getElementById("alphaSorted");
            
            const updateToggles = () => {
                toggleCount = !toggleCount;
                
                countLink.style.display = toggleCount ? 'none' : 'inline';
                alphaLink.style.display = toggleCount ? 'inline' : 'none';
                countBold.style.display = toggleCount ? 'inline' : 'none';
                alphaBold.style.display = toggleCount ? 'none' : 'inline';
                countList.style.display = toggleCount ? 'block' : 'none';
                alphaList.style.display = toggleCount ? 'none' : 'block';
            }
            
            updateToggles()
            
            countLink.addEventListener('click', () => { updateToggles() });
            alphaLink.addEventListener('click', () => { updateToggles() });
        }
    }

    customElements.define('astro-toggle', Toggle);
</script>