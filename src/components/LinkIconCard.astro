---
import type { HTMLAttributes } from 'astro/types';
import { ArrowRight } from '@lucide/astro';

interface Props extends Omit<HTMLAttributes<'a'>, 'title'> {
    title: string;
    description?: string;
}
const { title, description, ...attributes } = Astro.props;
---

<a {...attributes}>
<article class="card sl-flex">
	<span class="title sl-flex">
        <slot name="icon">
            <ArrowRight size="1.333em" class="icon-arrow rtl:flip" />
        </slot>
        
		<span class="title" set:html={title} />
        
		<ArrowRight size="1.333em" class="icon-arrow rtl:flip" />
	</span>
	{description && <span class="description" set:html={description} />}
    <div class="body"><slot /></div>
</article>
</a>

<style>
    @layer starlight.components {
        .card {
            --sl-card-border: var(--sl-color-purple);
            --sl-card-bg: var(--sl-color-purple-low);
            border: 1px solid var(--sl-color-gray-5);
			border-radius: 0.5rem;
            background-color: var(--sl-color-black);
            padding: clamp(1rem, calc(0.125rem + 3vw), 2.5rem);
            flex-direction: row;
            gap: clamp(0.5rem, calc(0.125rem + 1vw), 1rem);
        }
        .card:nth-child(4n + 1) {
            --sl-card-border: var(--sl-color-accent);
            --sl-card-bg: var(--sl-color-accent-low);
        }
        .card:nth-child(4n + 3) {
            --sl-card-border: var(--sl-color-green);
            --sl-card-bg: var(--sl-color-green-low);
        }
        .card:nth-child(4n + 4) {
            --sl-card-border: var(--sl-color-red);
            --sl-card-bg: var(--sl-color-red-low);
        }
        .card:nth-child(4n + 5) {
            --sl-card-border: var(--sl-color-orange);
            --sl-card-bg: var(--sl-color-orange-low);
        }
        .title {
            font-weight: 600;
            font-size: var(--sl-text-h4);
            color: var(--sl-color-white);
            line-height: var(--sl-line-height-headings);
            gap: 1rem;
            align-items: center;
			width:100%;
			flex:1;
        }
        .card .icon {
            border: 1px solid var(--sl-card-border);
            background-color: var(--sl-card-bg);
            padding: 0.2em;
            border-radius: 0.25rem;
        }
        .card .body {
            margin: 0;
            font-size: clamp(var(--sl-text-sm), calc(0.5rem + 1vw), var(--sl-text-body));
        }

        a {
            text-decoration: none;
            line-height: var(--sl-line-height-headings);
        }

        .stack {
            flex-direction: column;
            gap: 0.5rem;
        }

        .description {
            color: var(--sl-color-gray-3);
            line-height: 1.5;
        }

		.icon-arrow {
			color: var(--sl-color-gray-3);
			float: right;
		}
		
        /* Hover state */
        .card:hover {
            background: var(--sl-color-gray-7, var(--sl-color-gray-6));
            border-color: var(--sl-color-gray-2);
        }

        .card:hover .icon-arrow {
            color: var(--sl-color-white);
        }
    }
</style>